'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProgressFeature = void 0;
const protocol_1 = require("../util/protocol");
const features_1 = require("./features");
const progressPart_1 = require("./progressPart");
class ProgressFeature {
    constructor(_client) {
        this._client = _client;
        this.activeParts = new Set();
    }
    get method() {
        return protocol_1.WorkDoneProgressCreateRequest.method;
    }
    fillClientCapabilities(capabilities) {
        (0, features_1.ensure)(capabilities, 'window').workDoneProgress = true;
    }
    getState() {
        return { kind: 'window', id: protocol_1.WorkDoneProgressCreateRequest.method, registrations: this.activeParts.size > 0 };
    }
    initialize() {
        let client = this._client;
        const deleteHandler = (part) => {
            this.activeParts.delete(part);
        };
        const createHandler = (params) => {
            this.activeParts.add(new progressPart_1.ProgressPart(this._client, params.token, deleteHandler));
        };
        client.onRequest(protocol_1.WorkDoneProgressCreateRequest.type, createHandler);
    }
    dispose() {
        for (const part of this.activeParts) {
            part.done();
        }
        this.activeParts.clear();
    }
}
exports.ProgressFeature = ProgressFeature;
//# sourceMappingURL=progress.js.map