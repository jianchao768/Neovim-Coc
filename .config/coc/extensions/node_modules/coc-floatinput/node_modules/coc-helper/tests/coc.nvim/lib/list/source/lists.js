'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
exports.mruScore = void 0;
const tslib_1 = require("tslib");
const mru_1 = tslib_1.__importDefault(require("../../model/mru"));
const string_1 = require("../../util/string");
const basic_1 = tslib_1.__importDefault(require("../basic"));
const formatting_1 = require("../formatting");
class ListsList extends basic_1.default {
    constructor(listMap) {
        super();
        this.listMap = listMap;
        this.name = 'lists';
        this.defaultAction = 'open';
        this.description = 'registered lists of coc.nvim';
        this.mru = new mru_1.default('lists');
        this.addAction('open', async (item) => {
            let { name } = item.data;
            await this.mru.add(name);
            setTimeout(() => {
                this.nvim.command(`CocList ${name}`, true);
            }, 50);
        });
    }
    async loadItems(_context) {
        let items = [];
        let mruList = await this.mru.load();
        for (let list of this.listMap.values()) {
            if (list.name == 'lists')
                continue;
            items.push({
                label: [list.name, (0, string_1.toText)(list.description)],
                data: {
                    name: list.name,
                    interactive: list.interactive,
                    score: mruScore(mruList, list.name)
                }
            });
        }
        items.sort((a, b) => b.data.score - a.data.score);
        return (0, formatting_1.formatListItems)(this.alignColumns, items);
    }
    doHighlight() {
        let { nvim } = this;
        nvim.pauseNotification();
        nvim.command('syntax match CocListsDesc /\\t.*$/ contained containedin=CocListsLine', true);
        nvim.command('highlight default link CocListsDesc Comment', true);
        nvim.resumeNotification(false, true);
    }
}
exports.default = ListsList;
function mruScore(list, key) {
    let idx = list.indexOf(key);
    return idx == -1 ? -1 : list.length - idx;
}
exports.mruScore = mruScore;
//# sourceMappingURL=lists.js.map