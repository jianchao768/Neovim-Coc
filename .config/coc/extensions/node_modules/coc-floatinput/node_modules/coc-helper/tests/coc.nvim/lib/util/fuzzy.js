'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
exports.fuzzyMatch = exports.fuzzyChar = exports.caseMatch = exports.wordChar = exports.getCharCodes = void 0;
const constants_1 = require("./constants");
function getCharCodes(str) {
    let len = str.length;
    let res = new Uint16Array(len);
    for (let i = 0, l = len; i < l; i++) {
        res[i] = str.charCodeAt(i);
    }
    return res;
}
exports.getCharCodes = getCharCodes;
function wordChar(ch) {
    return (ch >= 97 && ch <= 122) || (ch >= 65 && ch <= 90);
}
exports.wordChar = wordChar;
function caseMatch(input, code, ignorecase = false) {
    if (input === code)
        return true;
    if (code < constants_1.ASCII_END) {
        if (input >= 97 && input <= 122 && code + 32 === input)
            return true;
        if (ignorecase) {
            if (input <= 90 && input + 32 === code)
                return true;
            if (toLower(input) === code)
                return true;
        }
    }
    else {
        let lower = toLower(code);
        if (lower === input || (ignorecase && toLower(input) === lower))
            return true;
    }
    return false;
}
exports.caseMatch = caseMatch;
function toLower(code) {
    return String.fromCharCode(code).toLowerCase().charCodeAt(0);
}
function fuzzyChar(a, b, ignorecase = false) {
    let ca = a.charCodeAt(0);
    let cb = b.charCodeAt(0);
    return caseMatch(ca, cb, ignorecase);
}
exports.fuzzyChar = fuzzyChar;
// upper case must match, lower case ignore case
function fuzzyMatch(needle, text, ignorecase = false) {
    let totalCount = needle.length;
    let tl = text.length;
    if (totalCount > tl)
        return false;
    let i = 0;
    let curr = needle[0];
    for (let j = 0; j < tl; j++) {
        let code = text.charCodeAt(j);
        if (caseMatch(curr, code, ignorecase)) {
            i = i + 1;
            curr = needle[i];
            if (i === totalCount)
                return true;
            continue;
        }
        if (tl - j - 1 < totalCount - i) {
            break;
        }
    }
    return false;
}
exports.fuzzyMatch = fuzzyMatch;
//# sourceMappingURL=fuzzy.js.map