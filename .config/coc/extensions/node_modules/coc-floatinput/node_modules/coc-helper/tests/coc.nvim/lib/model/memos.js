'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
const fs_1 = require("../util/fs");
const node_1 = require("../util/node");
const object_1 = require("../util/object");
class Memos {
    constructor(filepath) {
        this.filepath = filepath;
        if (!node_1.fs.existsSync(filepath)) {
            node_1.fs.writeFileSync(filepath, '{}', 'utf8');
        }
    }
    merge(filepath) {
        if (!node_1.fs.existsSync(filepath))
            return;
        let obj = (0, fs_1.loadJson)(filepath);
        let current = (0, fs_1.loadJson)(this.filepath);
        Object.assign(current, obj);
        (0, fs_1.writeJson)(this.filepath, current);
        node_1.fs.unlinkSync(filepath);
    }
    fetchContent(id, key) {
        let res = (0, fs_1.loadJson)(this.filepath);
        let obj = res[id];
        if (!obj)
            return undefined;
        return obj[key];
    }
    async update(id, key, value) {
        let { filepath } = this;
        let current = (0, fs_1.loadJson)(filepath);
        current[id] = current[id] || {};
        if (value !== undefined) {
            current[id][key] = (0, object_1.deepClone)(value);
        }
        else {
            delete current[id][key];
        }
        (0, fs_1.writeJson)(filepath, current);
    }
    createMemento(id) {
        return {
            get: (key, defaultValue) => {
                let res = this.fetchContent(id, key);
                return res === undefined ? defaultValue : res;
            },
            update: async (key, value) => {
                await this.update(id, key, value);
            }
        };
    }
}
exports.default = Memos;
//# sourceMappingURL=memos.js.map