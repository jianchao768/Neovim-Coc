"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const line_1 = tslib_1.__importDefault(require("../../model/line"));
describe('LineBuilder', () => {
    it('should append', async () => {
        let line = new line_1.default(true);
        line.append('');
        line.append('text');
        line.append('comment', 'Comment');
        line.append('nested', undefined, [{ hlGroup: 'Search', offset: 1, length: 2 }]);
        expect(line.label).toBe('text comment nested');
        expect(line.highlights).toEqual([
            { hlGroup: 'Comment', span: [5, 12] },
            { hlGroup: 'Search', span: [14, 16] }
        ]);
        let other = new line_1.default();
        other.append('text', 'More');
        line.appendBuilder(other);
        expect(line.label).toBe('text comment nested text');
        expect(line.highlights).toEqual([
            { hlGroup: 'Comment', span: [5, 12] },
            { hlGroup: 'Search', span: [14, 16] },
            { hlGroup: 'More', span: [20, 24] }
        ]);
    });
    it('should append without space', async () => {
        let line = new line_1.default(false);
        line.append('text');
        let other = new line_1.default();
        other.append('text', 'More');
        line.appendBuilder(other);
        expect(line.label).toBe('texttext');
        expect(line.highlights).toEqual([
            { hlGroup: 'More', span: [4, 8] }
        ]);
    });
});
//# sourceMappingURL=line.test.js.map