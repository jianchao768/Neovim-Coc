import { CompletionItemProvider, Document, CompletionItem, Position, CompletionItemKind, TextDocument } from 'coc.nvim';
declare type ListItem = {
    name: string;
    kind?: CompletionItemKind;
};
export declare abstract class ListProvider implements CompletionItemProvider {
    abstract getList(prefix: string): Promise<ListItem[]>;
    completionKind: CompletionItemKind;
    provideCompletionItems(document: TextDocument, position: Position): Promise<CompletionItem[]>;
}
export declare class VimCommandProvider extends ListProvider {
    getList(prefix: string): Promise<ListItem[]>;
}
export declare class CocCommandProvider extends ListProvider {
    getList(prefix: string): Promise<ListItem[]>;
}
export declare class CocSymbolProvider extends ListProvider {
    document?: Document;
    getList(prefix: string): Promise<ListItem[]>;
}
export {};
