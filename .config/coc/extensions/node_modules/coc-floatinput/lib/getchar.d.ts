import { VimModule } from 'coc-helper';
import { KeyNames } from './escapeKeys';
import { LiteralUnion } from 'type-fest';
export declare enum CharMode {
    none = 0,
    shift = 2,
    control = 4,
    /**
     * alt / meta
     */
    alt = 8,
    meta = 16,
    mouseDoubleClick = 32,
    mouseTripleClick = 64,
    mouseQuadrupleClick = 96,
    /**
     * MacOS only
     */
    command = 128
}
export declare function getcharStart<R = void>(onInputChar: (options: {
    char: string;
    mode: CharMode;
    codes: Record<KeyNames, string>;
    matchCodeWith: (code: string, names: LiteralUnion<KeyNames, string>[]) => boolean;
    matchCode: (names: LiteralUnion<KeyNames, string>[]) => boolean;
    stop: (result?: R) => Promise<void>;
}) => unknown): Promise<R | undefined>;
export declare const getcharModule: {
    activated: VimModule.Var<unknown>;
    getc: VimModule.FnCaller<[], string>;
    startPrompt: VimModule.FnCaller<[], void>;
    stopPrompt: VimModule.FnCaller<[], void>;
};
